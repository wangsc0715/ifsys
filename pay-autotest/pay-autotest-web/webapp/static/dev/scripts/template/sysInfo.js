/** * Created by marszed on 16/3/8. */define(function(require, exports, module){	var template = require('template'),		$ = require('jquery'),		proInfo = require('proInfo'),		pro = new proInfo.proInfoInit(),		intInfo = require('intInfo'),		int = new intInfo.intInfoInit(),		common = require('common'),		GiGoldPay = new common.GiGoldPay(),		$slider = $('#slider');	var global = require('global'),		GiGoldTool = new global.GiGoldTool();	var allSysInfoLock = false;//请求左侧菜单栏接口信息锁	//选择系统 -> 更新产品,更新接口信息列表	$slider.on('click','.chooseSys > li > a',function(){		var $this = $(this),			sysid = $this.attr('sysid')-0;		if(sysid){			int.cleanCache();			int.cleanCaseDome();			$('#hdLeftBox').empty();			//更新已选择系统的cookie			GiGoldTool.cookie('sysid',sysid,{expires:365});			GiGoldTool.cookie('proid','',{expires:365});			$slider.find('.chooseSysVal').html($this.html()+'&nbsp;<span class="caret"></span>').attr('sysid',sysid);			$('#fixLayer').find('.fixSysListBtn').html($this.html()+'&nbsp;<span class="caret" sid='+sysid+'></span>');			pro.updateProInfo({				data: {					interFacePro: {sysId: sysid}				}			});			int.updateInterface({				data: {					ifName: "",					ifProId: $slider.find('.chooseProVal').attr('proid') || 0,					ifSysId: sysid,					pageNum: 1				}			});		}	});	function sysInfoInit(){}	//获取测试系统信息	sysInfoInit.prototype.updateAllSysInfo = function(obj){		if(!allSysInfoLock){			allSysInfoLock = true;			GiGoldPay.ajaxHandler({				"url": obj.url || GiGoldPay.ipBullShit()+"/autotest/getAllSysInfo.do",				"data": obj.data || {},				"onSuccess":function(data){					if (data.rspCd == "00000") {						allSysInfoLock = false;						data.sysId = GiGoldTool.cookie('sysid');						if(data.sysList.length){							//渲染弹层模版->系统							for(var i = 0, len = data.sysList.length; i < len;i++){								if(data.sysId == data.sysList[i].id){									data.sysName = data.sysList[i].sysName;									break;								}							}							var html = template('fixSysBox',data);							document.getElementById('fixChooseSys').innerHTML = html;							renderByJson(data.sysList);						}					} else {						GiGoldPay.cancleLock(allSysInfoLock);					}				},				"onError": function(data){					GiGoldPay.cancleLock(allSysInfoLock);				}			});		}	};	//渲染选取选择系统模板	function renderByJson(data){		var sysId = GiGoldTool.cookie('sysid'),			str = '<button type="button" class="btn btn-default dropdown-toggle chooseSysVal" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">请选择系统&nbsp;<span class="caret"></span></button>';		for(var i = 0, len = data.length; i < len; i++){			if(sysId == data[i].id){				str = '<button type="button" class="btn btn-default dropdown-toggle chooseSysVal" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false" sysid='+data[i].id+'>'+data[i].sysName+'&nbsp;<span class="caret" ></span></button>';				break;			}		}		var sysHtml =			str+			'<ul class="dropdown-menu chooseSys">'+			'{{ each data as obj i}}'+			'<li><a href="javascript:;" sysId="{{ obj.id }}">{{ obj.sysName }}</a></li>'+			'{{/each}}'+			'</ul>';		var render = template.compile(sysHtml);		var html = render({			data: data		});		document.getElementById('sysInfo').innerHTML = html;	};	//左侧侧栏接口列表初始化	var sliderSysInfo = new sysInfoInit();	sliderSysInfo.updateAllSysInfo({		data: {			sysId: GiGoldTool.cookie('sysid')		}	});	//暴露接口,以供后续局部刷新	module.exports = {		intInfoInit: sliderSysInfo	};});